#!/usr/bin/env python3
# -*-encoding: utf-8-*-

# created: 29.01.19
# by David Zashkolny
# 2 course, comp math
# Taras Shevchenko National University of Kyiv
# email: davendiy@gmail.com

from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
e = 65537
p = 1680613444652105838344133706142211604381500993652031705380909307238347587888162431490921255465344239
q = 2143532995881162829855694296384103840144300960388531553947710050014176459461784664429637761367242287
c = 1921902980210977295270519710634709719343372281625129194637780159651252905527903923450045434239794433327822136581724693103107581315471305119544244907185643235873825200596556268483571243342863955690176

d = 867343095026250381093803255120176518194131338919272167451163077643755666251145991369745445258949415286661787912030664652264449534826942669735567922425656327496126909783074356642507898412965396161229

key = RSA.construct((p*q, e, d, p, q))
cipher = PKCS1_OAEP.new(key)
print(cipher.decrypt(bytes(str(c), encoding='utf-8')))
